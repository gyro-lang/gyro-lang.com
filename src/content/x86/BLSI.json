{"name":"BLSI","href":"/x86/blsi","description":"Extract Lowest Set Isolated Bit","instructionTypes":[{"opCode":"VEX.LZ.0F38.W0 F3 /3 BLSI r32, r/m32","instruction":"VM","operatorEncoding":"V/V","supports64BitMode":"BMI1","supportsCompatMode":"Extract lowest set bit from r/m32 and set that bit in r32.","description":"VEX.LZ.0F38.W1 F3 /3 BLSI r64, r/m64"}],"instructionOperandEncodings":[{"operatorEncoding":"VM","operand1":"VEX.vvvv (w)","operand2":"ModRM:r/m (r)","operand3":"N/A","operand4":"N/A"}],"longDescription":"Extracts the lowest set bit from the source operand and set the corresponding bit in the destination register. All other bits in the destination operand are zeroed. If no bits are set in the source operand, BLSI sets all the bits in the destination to 0 and sets ZF and CF.\n\nThis instruction is not supported in real mode and virtual-8086 mode. The operand size is always 32 bits if not in 64-bit mode. In 64-bit mode operand size 64 requires VEX.W1. VEX.W1 is ignored in non-64-bit modes. An attempt to execute this instruction with VEX.L not equal to 0 will cause #UD.\n\n","operation":"temp := (-SRC) bitwiseAND (SRC);\nSF := temp[OperandSize -1];\nZF := (temp = 0);\nIF SRC = 0\n    CF := 0;\nELSE\n    CF := 1;\nFI\nDEST := temp;\n","flagsAffected":"ZF and SF are updated based on the result. CF is set if the source is not zero. OF flags are cleared. AF and PF flags are undefined.","protectedModeExceptions":null,"realAddressModeExceptions":null,"virtual8086ModeExceptions":null,"compatibilityModeExceptions":null,"mode64BitExceptions":null}