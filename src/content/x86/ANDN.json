{"name":"ANDN","href":"/x86/andn","description":"Logical AND NOT","instructionTypes":[{"opCode":"VEX.LZ.0F38.W0 F2 /r ANDN r32a, r32b, r/m32","instruction":"RVM","operatorEncoding":"V/V","supports64BitMode":"BMI1","supportsCompatMode":"Bitwise AND of inverted r32b with r/m32, store result in r32a.","description":"VEX.LZ. 0F38.W1 F2 /r ANDN r64a, r64b, r/m64"}],"instructionOperandEncodings":[{"operatorEncoding":"RVM","operand1":"ModRM:reg (w)","operand2":"VEX.vvvv (r)","operand3":"ModRM:r/m (r)","operand4":"N/A"}],"longDescription":"Performs a bitwise logical AND of inverted second operand (the first source operand) with the third operand (the\n\nsecond source operand). The result is stored in the first operand (destination operand).\n\nThis instruction is not supported in real mode and virtual-8086 mode. The operand size is always 32 bits if not in 64-bit mode. In 64-bit mode operand size 64 requires VEX.W1. VEX.W1 is ignored in non-64-bit modes. An attempt to execute this instruction with VEX.L not equal to 0 will cause #UD.\n\n","operation":"DEST := (NOT SRC1) bitwiseAND SRC2;\nSF := DEST[OperandSize -1];\nZF := (DEST = 0);\n","flagsAffected":"SF and ZF are updated based on result. OF and CF flags are cleared. AF and PF flags are undefined.","protectedModeExceptions":null,"realAddressModeExceptions":null,"virtual8086ModeExceptions":null,"compatibilityModeExceptions":null,"mode64BitExceptions":null}