{"name":"BNDCN","href":"/x86/bndcu:bndcn","description":"Check Upper Bound","instructionTypes":[{"opCode":"F2 0F 1A /r BNDCU bnd, r/m32","instruction":"RM","operatorEncoding":"NE/V","supports64BitMode":"MPX","supportsCompatMode":"Generate a #BR if the address in r/m32 is higher than the upper bound in bnd.UB (bnb.UB in 1's complement form).","description":"F2 0F 1A /r BNDCU bnd, r/m64"}],"instructionOperandEncodings":[{"operatorEncoding":"RM","operand1":"ModRM:reg (w)","operand2":"ModRM:r/m (r)","operand3":"N/A","operand4":""}],"longDescription":"Compare the address in the second operand with the upper bound in bnd. The second operand can be either a register or a memory operand. If the address is higher than the upper bound in bnd.UB, it will set BNDSTATUS to 01H and signal a #BR exception.\n\nBNDCU perform 1’s complement operation on the upper bound of bnd first before proceeding with address comparison. BNDCN perform address comparison directly using the upper bound in bnd that is already reverted out of 1’s complement form.\n\nThis instruction does not cause any memory access, and does not read or write any flags.\n\nEffective address computation of m32/64 has identical behavior to LEA\n\n","operation":"","flagsAffected":"None","protectedModeExceptions":"\n<tbody><tr>\n<td>#BR</td>\n<td>If upper bound check fails.</td></tr>\n<tr>\n<td rowspan=\"4\">#UD</td>\n<td>If the LOCK prefix is used.</td></tr>\n<tr>\n<td>If ModRM.r/m encodes BND4-BND7 when Intel MPX is enabled.</td></tr>\n<tr>\n<td>If 67H prefix is not used and CS.D=0.</td></tr>\n<tr>\n<td>If 67H prefix is used and CS.D=1.</td></tr></tbody>","realAddressModeExceptions":"\n<tbody><tr>\n<td>#BR</td>\n<td>If upper bound check fails.</td></tr>\n<tr>\n<td rowspan=\"3\">#UD</td>\n<td>If the LOCK prefix is used.</td></tr>\n<tr>\n<td>If ModRM.r/m encodes BND4-BND7 when Intel MPX is enabled.</td></tr>\n<tr>\n<td>If 16-bit addressing is used.</td></tr></tbody>","virtual8086ModeExceptions":"\n<tbody><tr>\n<td>#BR</td>\n<td>If upper bound check fails.</td></tr>\n<tr>\n<td rowspan=\"3\">#UD</td>\n<td>If the LOCK prefix is used.</td></tr>\n<tr>\n<td>If ModRM.r/m encodes BND4-BND7 when Intel MPX is enabled.</td></tr>\n<tr>\n<td>If 16-bit addressing is used.</td></tr></tbody>","compatibilityModeExceptions":null,"mode64BitExceptions":"\n<tbody><tr>\n<td>#UD</td>\n<td>If ModRM.r/m and REX encodes BND4-BND15 when Intel MPX is enabled.</td></tr></tbody>"}